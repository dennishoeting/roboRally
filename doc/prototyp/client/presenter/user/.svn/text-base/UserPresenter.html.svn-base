<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_20) on Mon Jan 31 18:41:17 CET 2011 -->
<TITLE>
UserPresenter
</TITLE>

<META NAME="date" CONTENT="2011-01-31">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="UserPresenter";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/UserPresenter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?prototyp/client/presenter/user/UserPresenter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="UserPresenter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
prototyp.client.presenter.user</FONT>
<BR>
Class UserPresenter</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by "><B>prototyp.client.presenter.user.UserPresenter</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>UserPresenter</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
Presenter für das User Model des jeweiligen Benutzers Erstellt eine Instanz mit einem User und kann auch den jeweiligen DB
 Eintrag ändern.
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>1.0, 1.1 Hier ist jetzt der ClosingHandler drin, 1.2 Gibt jetzt jede Minute ein Signal an den Server, dass der User noch da ist.</DD>
<DT><B>Author:</B></DT>
  <DD>Timo (Verantwortlicher)</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.util.List&lt;de.novanic.eventservice.client.event.domain.Domain&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#chatServiceDomains">chatServiceDomains</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alle Chat Domains, für die Nachricht beim Verlassen der Seite.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.util.Map&lt;java.lang.String,de.novanic.eventservice.client.event.listener.RemoteEventListener&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#eventListeners">eventListeners</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enthält alle Aktiven RemoteEventListener für den Unlistener Listener wichtig</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../../prototyp/client/service/LobbyServiceAsync.html" title="interface in prototyp.client.service">LobbyServiceAsync</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#lobbyService">lobbyService</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LobbyService</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;java.util.List&lt;java.lang.Integer&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#roundIDs">roundIDs</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Liste mit allen aktiven RoundIDs des Users</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../../prototyp/client/service/RoundManagerServiceAsync.html" title="interface in prototyp.client.service">RoundManagerServiceAsync</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#roundManagerService">roundManagerService</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RoundManagerService</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;de.novanic.eventservice.client.event.RemoteEventService</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#theEventService">theEventService</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;RemoteEventService</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#user">user</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Attribute</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private static&nbsp;<A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html" title="class in prototyp.client.presenter.user">UserPresenter</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#userPresenter">userPresenter</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die UserPresenter-Instanz</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../../../../prototyp/client/service/UserServiceAsync.html" title="interface in prototyp.client.service">UserServiceAsync</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#userService">userService</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Async-Objekt</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private </CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#UserPresenter(prototyp.shared.useradministration.User)">UserPresenter</A></B>(<A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A>&nbsp;user)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Konstruktor im SingleTon-Pattern.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#addNewChatServiceDomain(de.novanic.eventservice.client.event.domain.Domain)">addNewChatServiceDomain</A></B>(de.novanic.eventservice.client.event.domain.Domain&nbsp;domain)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wird immer aufgerufen, wenn ein Chat erstellt wird.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#addRemoteEventListener(java.lang.String, de.novanic.eventservice.client.event.listener.RemoteEventListener)">addRemoteEventListener</A></B>(java.lang.String&nbsp;domain,
                       de.novanic.eventservice.client.event.listener.RemoteEventListener&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fügt einen RemoteEventListener hinzu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#addRound(int)">addRound</A></B>(int&nbsp;roundID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fügt eine neue aktive Round(ID) hinzu.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#deleteChatServiceDomain(de.novanic.eventservice.client.event.domain.Domain)">deleteChatServiceDomain</A></B>(de.novanic.eventservice.client.event.domain.Domain&nbsp;domain)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Löscht eine ChatServiceDomain wieder.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#deleteRemoteEventServiceListeners()">deleteRemoteEventServiceListeners</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Löscht alle angemeldeten Listener der RemoteEventServices (sollte beim ausloggen aufgerufen werden)</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#deleteRound(int)">deleteRound</A></B>(int&nbsp;roundID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Löscht eine (nicht mehr aktive) RoundID.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.List&lt;java.lang.Integer&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#getActiveRounds()">getActiveRounds</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Liefert alle RoundIDs, in denen der User/Player/Watcher sich befindet.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html" title="class in prototyp.client.presenter.user">UserPresenter</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#getInstance()">getInstance</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Wenn der UserPresenter schon einmalig erzeugt wurde kann er mittels dieser Methode statisch geholt werden.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#getNickname()">getNickname</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Liefert den Nickname des Users</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#getUser()">getUser</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Liefert das Userobjekt</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../prototyp/client/service/UserServiceAsync.html" title="interface in prototyp.client.service">UserServiceAsync</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#getUserService()">getUserService</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Liefert den UserService</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#giveAliveSignal()">giveAliveSignal</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gibt dem Server jede Minute ein Lebenszeichen.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#isAdmin()">isAdmin</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Überprüft, ob es sich um einen Administrator handelt.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#onClosing()">onClosing</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alles was passieren soll wenn der Browser geschlossen wird oder die Seite verlassen wird, kommt hier rein.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#putUser(prototyp.shared.useradministration.User)">putUser</A></B>(<A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A>&nbsp;user)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Erstellt einen neuen UserPresenter</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#removeRemoteEventListener(java.lang.String)">removeRemoteEventListener</A></B>(java.lang.String&nbsp;domain)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Löscht einen RemoteEventListener aus der Liste.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html#setUser(prototyp.shared.useradministration.User)">setUser</A></B>(<A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A>&nbsp;user)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Setzt ein neues Userobjekt</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="userPresenter"><!-- --></A><H3>
userPresenter</H3>
<PRE>
private static <A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html" title="class in prototyp.client.presenter.user">UserPresenter</A> <B>userPresenter</B></PRE>
<DL>
<DD>die UserPresenter-Instanz
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="chatServiceDomains"><!-- --></A><H3>
chatServiceDomains</H3>
<PRE>
private java.util.List&lt;de.novanic.eventservice.client.event.domain.Domain&gt; <B>chatServiceDomains</B></PRE>
<DL>
<DD>Alle Chat Domains, für die Nachricht beim Verlassen der Seite.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="roundIDs"><!-- --></A><H3>
roundIDs</H3>
<PRE>
private java.util.List&lt;java.lang.Integer&gt; <B>roundIDs</B></PRE>
<DL>
<DD>Liste mit allen aktiven RoundIDs des Users
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="theEventService"><!-- --></A><H3>
theEventService</H3>
<PRE>
private de.novanic.eventservice.client.event.RemoteEventService <B>theEventService</B></PRE>
<DL>
<DD>RemoteEventService
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="user"><!-- --></A><H3>
user</H3>
<PRE>
private <A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A> <B>user</B></PRE>
<DL>
<DD>Attribute
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="userService"><!-- --></A><H3>
userService</H3>
<PRE>
private final <A HREF="../../../../prototyp/client/service/UserServiceAsync.html" title="interface in prototyp.client.service">UserServiceAsync</A> <B>userService</B></PRE>
<DL>
<DD>Async-Objekt
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="roundManagerService"><!-- --></A><H3>
roundManagerService</H3>
<PRE>
private final <A HREF="../../../../prototyp/client/service/RoundManagerServiceAsync.html" title="interface in prototyp.client.service">RoundManagerServiceAsync</A> <B>roundManagerService</B></PRE>
<DL>
<DD>RoundManagerService
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="lobbyService"><!-- --></A><H3>
lobbyService</H3>
<PRE>
private final <A HREF="../../../../prototyp/client/service/LobbyServiceAsync.html" title="interface in prototyp.client.service">LobbyServiceAsync</A> <B>lobbyService</B></PRE>
<DL>
<DD>LobbyService
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="eventListeners"><!-- --></A><H3>
eventListeners</H3>
<PRE>
private java.util.Map&lt;java.lang.String,de.novanic.eventservice.client.event.listener.RemoteEventListener&gt; <B>eventListeners</B></PRE>
<DL>
<DD>Enthält alle Aktiven RemoteEventListener für den Unlistener Listener wichtig
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="UserPresenter(prototyp.shared.useradministration.User)"><!-- --></A><H3>
UserPresenter</H3>
<PRE>
private <B>UserPresenter</B>(<A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A>&nbsp;user)</PRE>
<DL>
<DD>Konstruktor im SingleTon-Pattern.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>user</CODE> - Eingeloggte User</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getInstance()"><!-- --></A><H3>
getInstance</H3>
<PRE>
public static <A HREF="../../../../prototyp/client/presenter/user/UserPresenter.html" title="class in prototyp.client.presenter.user">UserPresenter</A> <B>getInstance</B>()</PRE>
<DL>
<DD>Wenn der UserPresenter schon einmalig erzeugt wurde kann er mittels dieser Methode statisch geholt werden.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>userPresenter</DL>
</DD>
</DL>
<HR>

<A NAME="putUser(prototyp.shared.useradministration.User)"><!-- --></A><H3>
putUser</H3>
<PRE>
public static void <B>putUser</B>(<A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A>&nbsp;user)</PRE>
<DL>
<DD>Erstellt einen neuen UserPresenter
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>user</CODE> - Eingeloggte User</DL>
</DD>
</DL>
<HR>

<A NAME="addNewChatServiceDomain(de.novanic.eventservice.client.event.domain.Domain)"><!-- --></A><H3>
addNewChatServiceDomain</H3>
<PRE>
public boolean <B>addNewChatServiceDomain</B>(de.novanic.eventservice.client.event.domain.Domain&nbsp;domain)</PRE>
<DL>
<DD>Wird immer aufgerufen, wenn ein Chat erstellt wird.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>domain</CODE> - Neue Domain
<DT><B>Returns:</B><DD>true, falls alles geklappt hat</DL>
</DD>
</DL>
<HR>

<A NAME="addRemoteEventListener(java.lang.String, de.novanic.eventservice.client.event.listener.RemoteEventListener)"><!-- --></A><H3>
addRemoteEventListener</H3>
<PRE>
public boolean <B>addRemoteEventListener</B>(java.lang.String&nbsp;domain,
                                      de.novanic.eventservice.client.event.listener.RemoteEventListener&nbsp;listener)</PRE>
<DL>
<DD>Fügt einen RemoteEventListener hinzu. Falls schon einer zu der Domain existiert, wird dieser ersetzt.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>domain</CODE> - <DD><CODE>listener</CODE> - 
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="addRound(int)"><!-- --></A><H3>
addRound</H3>
<PRE>
public boolean <B>addRound</B>(int&nbsp;roundID)</PRE>
<DL>
<DD>Fügt eine neue aktive Round(ID) hinzu.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>round</CODE> - ID, der neuen aktiven Runde
<DT><B>Returns:</B><DD>true, falls es geklappt hat.</DL>
</DD>
</DL>
<HR>

<A NAME="deleteChatServiceDomain(de.novanic.eventservice.client.event.domain.Domain)"><!-- --></A><H3>
deleteChatServiceDomain</H3>
<PRE>
public boolean <B>deleteChatServiceDomain</B>(de.novanic.eventservice.client.event.domain.Domain&nbsp;domain)</PRE>
<DL>
<DD>Löscht eine ChatServiceDomain wieder. Sollte gemacht werden, wenn ein Chat nicht mehr existiert.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>domain</CODE> - Domain, die gelöscht werden soll
<DT><B>Returns:</B><DD>true, falls alles geklappt hat.</DL>
</DD>
</DL>
<HR>

<A NAME="deleteRemoteEventServiceListeners()"><!-- --></A><H3>
deleteRemoteEventServiceListeners</H3>
<PRE>
public boolean <B>deleteRemoteEventServiceListeners</B>()</PRE>
<DL>
<DD>Löscht alle angemeldeten Listener der RemoteEventServices (sollte beim ausloggen aufgerufen werden)
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true, falls alles geklappt hat.</DL>
</DD>
</DL>
<HR>

<A NAME="deleteRound(int)"><!-- --></A><H3>
deleteRound</H3>
<PRE>
public boolean <B>deleteRound</B>(int&nbsp;roundID)</PRE>
<DL>
<DD>Löscht eine (nicht mehr aktive) RoundID.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>round</CODE> - ID der Spielrunde, die gelöscht werden soll
<DT><B>Returns:</B><DD>true, falls alles geklappt hat.</DL>
</DD>
</DL>
<HR>

<A NAME="getActiveRounds()"><!-- --></A><H3>
getActiveRounds</H3>
<PRE>
public java.util.List&lt;java.lang.Integer&gt; <B>getActiveRounds</B>()</PRE>
<DL>
<DD>Liefert alle RoundIDs, in denen der User/Player/Watcher sich befindet.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>ArrayList mit den aktiven Spielrunden des Spielers</DL>
</DD>
</DL>
<HR>

<A NAME="getNickname()"><!-- --></A><H3>
getNickname</H3>
<PRE>
public java.lang.String <B>getNickname</B>()</PRE>
<DL>
<DD>Liefert den Nickname des Users
<P>
<DD><DL>

<DT><B>Returns:</B><DD>nickname</DL>
</DD>
</DL>
<HR>

<A NAME="getUser()"><!-- --></A><H3>
getUser</H3>
<PRE>
public <A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A> <B>getUser</B>()</PRE>
<DL>
<DD>Liefert das Userobjekt
<P>
<DD><DL>

<DT><B>Returns:</B><DD>user</DL>
</DD>
</DL>
<HR>

<A NAME="getUserService()"><!-- --></A><H3>
getUserService</H3>
<PRE>
public <A HREF="../../../../prototyp/client/service/UserServiceAsync.html" title="interface in prototyp.client.service">UserServiceAsync</A> <B>getUserService</B>()</PRE>
<DL>
<DD>Liefert den UserService
<P>
<DD><DL>

<DT><B>Returns:</B><DD>userService</DL>
</DD>
</DL>
<HR>

<A NAME="giveAliveSignal()"><!-- --></A><H3>
giveAliveSignal</H3>
<PRE>
private void <B>giveAliveSignal</B>()</PRE>
<DL>
<DD>Gibt dem Server jede Minute ein Lebenszeichen.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isAdmin()"><!-- --></A><H3>
isAdmin</H3>
<PRE>
public boolean <B>isAdmin</B>()</PRE>
<DL>
<DD>Überprüft, ob es sich um einen Administrator handelt.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true, wenn es sich um einen Administrator handelt.</DL>
</DD>
</DL>
<HR>

<A NAME="onClosing()"><!-- --></A><H3>
onClosing</H3>
<PRE>
private boolean <B>onClosing</B>()</PRE>
<DL>
<DD>Alles was passieren soll wenn der Browser geschlossen wird oder die Seite verlassen wird, kommt hier rein.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>true</DL>
</DD>
</DL>
<HR>

<A NAME="removeRemoteEventListener(java.lang.String)"><!-- --></A><H3>
removeRemoteEventListener</H3>
<PRE>
public boolean <B>removeRemoteEventListener</B>(java.lang.String&nbsp;domain)</PRE>
<DL>
<DD>Löscht einen RemoteEventListener aus der Liste.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>domain</CODE> - 
<DT><B>Returns:</B><DD>true, wenn der RemoteEventListener gelöscht wurde</DL>
</DD>
</DL>
<HR>

<A NAME="setUser(prototyp.shared.useradministration.User)"><!-- --></A><H3>
setUser</H3>
<PRE>
public boolean <B>setUser</B>(<A HREF="../../../../prototyp/shared/useradministration/User.html" title="class in prototyp.shared.useradministration">User</A>&nbsp;user)</PRE>
<DL>
<DD>Setzt ein neues Userobjekt
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>user</CODE> - Neues Userobjekt
<DT><B>Returns:</B><DD>true</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/UserPresenter.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html?prototyp/client/presenter/user/UserPresenter.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="UserPresenter.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
